{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "MAGE (Mobile Analytic GEOINT Environment)",
        "description": "MAGE API",
        "contact": {
            "name": "Benjamin Tuttle",
            "email": "benjamin.t.tuttle@nga.mil"
        },
        "license": {
            "name": "MIT",
            "url": "http://opensource.org/licenses/MIT"
        }
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/login": {
            "post": {
                "description": "login",
                "operationId": "login",
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "login request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login response",
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "description": "logout",
                "operationId": "logout",
                "tags": [
                    "Authentication"
                ],
                "responses": {
                    "200": {
                        "description": "logout response"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "Returns all users",
                "operationId": "getUsers",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "user response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Users"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new user.  Duplicates usernames are not allowed",
                "operationId": "addUser",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "user create body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserCreate"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "user response",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "description": "Returns a single user based on id",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of user to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "user response",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "put": {
                "description": "update a single user based on id",
                "operationId": "updateUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of user to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "user update body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserCreate"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "user update response",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "delete": {
                "description": "deletes a single user based on id",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of user to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "204": {
                        "description": "user deleted"
                    }
                }
            }
        },
        "/api/users/{id}/avatar": {
            "get": {
                "description": "Returns users avatar based on user id",
                "operationId": "getUserAvatar",
                "produces": [
                    "image/png",
                    "image/jpg",
                    "image/jpeg"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "user avatar response"
                    }
                }
            }
        },
        "/api/users/{id}/icon": {
            "get": {
                "description": "Returns users map icon based on user id",
                "operationId": "getUserIcon",
                "produces": [
                    "image/png",
                    "image/jpg",
                    "image/jpeg"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "user icon response"
                    }
                }
            }
        },
        "/api/users/myself": {
            "get": {
                "description": "Returns user currently logged",
                "operationId": "getMyself",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "user currently logged in",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "put": {
                "description": "update myself",
                "operationId": "updateMyself",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "user update response",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/api/devices": {
            "get": {
                "description": "Returns all devices",
                "operationId": "getDevices",
                "tags": [
                    "Device"
                ],
                "responses": {
                    "200": {
                        "description": "device response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Device"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "add new device",
                "operationId": "addDevice",
                "tags": [
                    "Device"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "new device body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new device response",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    }
                }
            }
        },
        "/api/roles": {
            "get": {
                "description": "get all roles",
                "operationId": "getRoles",
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "role response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/{id}": {
            "get": {
                "description": "get role by id",
                "operationId": "getRoleById",
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of role to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role response",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            }
        },
        "/api/devices/{id}": {
            "get": {
                "description": "Returns a single device based on id",
                "operationId": "getDeviceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of device to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Device"
                ],
                "responses": {
                    "200": {
                        "description": "device response",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    }
                }
            },
            "put": {
                "description": "update a single device based on id",
                "operationId": "updateDeviceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of device to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "device update body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceCreate"
                        }
                    }
                ],
                "tags": [
                    "Device"
                ],
                "responses": {
                    "200": {
                        "description": "device update response",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    }
                }
            },
            "delete": {
                "description": "deletes a single device based on id",
                "operationId": "deleteDevice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of device to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Device"
                ],
                "responses": {
                    "204": {
                        "description": "user deleted"
                    }
                }
            }
        },
        "/api/events": {
            "get": {
                "description": "get all events",
                "operationId": "getEvents",
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "event response",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            },
            "post": {
                "description": "add new event",
                "operationId": "addEvent",
                "tags": [
                    "Event"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "new event body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new event response",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            }
        },
        "/api/events/{id}": {
            "get": {
                "description": "Returns a single event based on id",
                "operationId": "getEventById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of event to fetch",
                        "required": true,
                        "type": "number"
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "event response",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            },
            "put": {
                "description": "update a single event based on id",
                "operationId": "updateEventById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of event to update",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "event update body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventCreate"
                        }
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "event update response",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            },
            "delete": {
                "description": "deletes a single event based on id",
                "operationId": "deleteEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of event to delete",
                        "required": true,
                        "type": "number"
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "204": {
                        "description": "event deleted"
                    }
                }
            }
        },
        "/api/events/{id}/form.zip": {
            "get": {
                "description": "Export a zip archive of the form .  Includes metadata and icon symbology",
                "operationId": "getFormArchive",
                "produces": [
                    "application/zip"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of event to fetch",
                        "required": true,
                        "type": "number"
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "form archive response"
                    }
                }
            }
        },
        "/api/events/{id}/form": {
            "get": {
                "description": "Get form for specified event",
                "operationId": "getForm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of event to fetch",
                        "required": true,
                        "type": "number"
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "form archive response",
                        "schema": {
                            "$ref": "#/definitions/Form"
                        }
                    }
                }
            },
            "put": {
                "description": "import a form archive for specified event",
                "operationId": "importFormArchive",
                "consumes": [
                    "multipart/form-data",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of event to update",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "archive",
                        "in": "formData",
                        "description": "form archive",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "form update body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FormCreate"
                        }
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "event update response",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            }
        },
        "/api/layers": {
            "get": {
                "description": "get all layers",
                "operationId": "getLayers",
                "tags": [
                    "Layer"
                ],
                "responses": {
                    "200": {
                        "description": "layer response",
                        "schema": {
                            "$ref": "#/definitions/Layer"
                        }
                    }
                }
            },
            "post": {
                "description": "add new layer",
                "operationId": "addLayer",
                "tags": [
                    "Layer"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "new layer body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LayerCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new layer response",
                        "schema": {
                            "$ref": "#/definitions/Layer"
                        }
                    }
                }
            }
        },
        "/api/layers/{id}": {
            "get": {
                "description": "Returns a single layer based on id",
                "operationId": "getLayerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of layer to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Layer"
                ],
                "responses": {
                    "200": {
                        "description": "layer response",
                        "schema": {
                            "$ref": "#/definitions/Layer"
                        }
                    }
                }
            },
            "put": {
                "description": "update a single layer based on id",
                "operationId": "updateLayerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of layer to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "layer update body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LayerCreate"
                        }
                    }
                ],
                "tags": [
                    "Layer"
                ],
                "responses": {
                    "200": {
                        "description": "layer update response",
                        "schema": {
                            "$ref": "#/definitions/Layer"
                        }
                    }
                }
            },
            "delete": {
                "description": "deletes a single layer based on id",
                "operationId": "deleteLayer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of layer to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Layer"
                ],
                "responses": {
                    "204": {
                        "description": "layer deleted"
                    }
                }
            }
        },
        "/api/icons/{formId}.zip": {
            "get": {
                "description": "get all icons",
                "operationId": "getIcons",
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "description": "formId in which icon resides",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "icon response"
                    }
                }
            }
        },
        "/api/icons/{formId}/{type}/{variant}": {
            "get": {
                "description": "Returns a single form based on id",
                "operationId": "getIcon",
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "description": "formId in which icon resides",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "icon type",
                        "type": "string"
                    },
                    {
                        "name": "variant",
                        "in": "path",
                        "description": "variant type",
                        "type": "string"
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "form response"
                    }
                }
            },
            "post": {
                "description": "add new icon",
                "operationId": "addIcon",
                "tags": [
                    "Event"
                ],
                "consumes": [
                    "mutipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "description": "formId in which icon resides",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "icon type",
                        "type": "string"
                    },
                    {
                        "name": "variant",
                        "in": "path",
                        "description": "variant type",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new icon response"
                    }
                }
            },
            "delete": {
                "description": "deletes a single icon",
                "operationId": "deleteIcon",
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "description": "formId in which icon resides",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "icon type",
                        "type": "string"
                    },
                    {
                        "name": "variant",
                        "in": "path",
                        "description": "variant type",
                        "type": "string"
                    }
                ],
                "tags": [
                    "Event"
                ],
                "responses": {
                    "204": {
                        "description": "icon deleted"
                    }
                }
            }
        },
        "/FeatureServer/{layerId}/features": {
            "get": {
                "description": "get all features for layerId",
                "operationId": "getFeatures",
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "path",
                        "description": "layerId in which to retrieve features",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "feature fields to project in response (JSON)",
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "type": "string",
                        "format": "dateTime"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "type": "string",
                        "format": "dateTime"
                    },
                    {
                        "name": "bbox",
                        "description": "bounding box array [minx,miny,maxx,maxy]",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "states",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Feature"
                ],
                "responses": {
                    "200": {
                        "description": "feature response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Feature"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "add new feature",
                "operationId": "addFeature",
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "path",
                        "description": "layerId for which to create feature",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "faature request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Feature"
                        }
                    }
                ],
                "tags": [
                    "Feature"
                ],
                "responses": {
                    "200": {
                        "description": "feature response",
                        "schema": {
                            "$ref": "#/definitions/Feature"
                        }
                    }
                }
            }
        },
        "/FeatureServer/{layerId}/features/{featureId}": {
            "get": {
                "description": "get feature for layerId based on featureId",
                "operationId": "getFeature",
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "path",
                        "description": "layerId in which to retrieve features",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "featureId",
                        "in": "path",
                        "description": "featureId for feature",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "feature fields to project in response (JSON)",
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "type": "string",
                        "format": "dateTime"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "type": "string",
                        "format": "dateTime"
                    },
                    {
                        "name": "bbox",
                        "description": "bounding box array [minx,miny,maxx,maxy]",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "states",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Feature"
                ],
                "responses": {
                    "200": {
                        "description": "feature response",
                        "schema": {
                            "$ref": "#/definitions/Feature"
                        }
                    }
                }
            },
            "put": {
                "description": "update feature for layerId based on featureId",
                "operationId": "updateFeature",
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "path",
                        "description": "layerId in which to retrieve features",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "featureId",
                        "in": "path",
                        "description": "featureId for feature",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "feature request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Feature"
                        }
                    }
                ],
                "tags": [
                    "Feature"
                ],
                "responses": {
                    "200": {
                        "description": "feature response",
                        "schema": {
                            "$ref": "#/definitions/Feature"
                        }
                    }
                }
            }
        },
        "/FeatureServer/{layerId}/features/{featureId}/states": {
            "post": {
                "description": "update state on provided feature for provided layer",
                "operationId": "addFeatureState",
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "path",
                        "description": "layerId in which to retrieve features",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "featureId",
                        "in": "path",
                        "description": "featureId for feature",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "state request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FeatureStateCreate"
                        }
                    }
                ],
                "tags": [
                    "Feature"
                ],
                "responses": {
                    "200": {
                        "description": "feature response",
                        "schema": {
                            "$ref": "#/definitions/FeatureState"
                        }
                    }
                }
            }
        },
        "/FeatureServer/{layerId}/features/{featureId}/attachments": {
            "get": {
                "description": "get attachments for feature in layer",
                "operationId": "getAttachments",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "path",
                        "description": "layerId in which to retrieve features",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "featureId",
                        "in": "path",
                        "description": "featureId for feature",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Feature"
                ],
                "responses": {
                    "200": {
                        "description": "attachment response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Attachment"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "add new attachment",
                "operationId": "addAttachment",
                "consumes": [
                    "mulitpart/form-data"
                ],
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "path",
                        "description": "layerId in which to create attachment",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "featureId",
                        "in": "path",
                        "description": "featureId in which to create attachment",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "attachment",
                        "in": "formData",
                        "type": "file",
                        "description": "attachment",
                        "required": true
                    }
                ],
                "tags": [
                    "Feature"
                ],
                "responses": {
                    "200": {
                        "description": "attachment response"
                    }
                }
            }
        },
        "/FeatureServer/{layerId}/features/{featureId}/attachment/{attachmentId}": {
            "get": {
                "description": "get attachment for feature in layer",
                "operationId": "getFeatureAttachment",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "path",
                        "description": "layerId in which to retrieve features",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "featureId",
                        "in": "path",
                        "description": "featureId for feature",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "description": "id of attachment to fetch",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Feature"
                ],
                "responses": {
                    "200": {
                        "description": "attachment response"
                    }
                }
            },
            "put": {
                "description": "update attachment for feature in layer",
                "operationId": "updateAttachment",
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "path",
                        "description": "layerId in which to retrieve features",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "featureId",
                        "in": "path",
                        "description": "featureId for feature",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "description": "id of attachment to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "attachment",
                        "in": "formData",
                        "type": "file",
                        "description": "attachment",
                        "required": true
                    }
                ],
                "tags": [
                    "Feature"
                ],
                "responses": {
                    "200": {
                        "description": "attachment response"
                    }
                }
            },
            "delete": {
                "description": "delete attachment for feature in layer",
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "path",
                        "description": "layerId in which to retrieve features",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "featureId",
                        "in": "path",
                        "description": "featureId for feature",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "description": "id of attachment to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Feature"
                ],
                "responses": {
                    "200": {
                        "description": "attachment delete"
                    }
                }
            }
        },
        "/api/locations": {
            "get": {
                "description": "get all locations",
                "operationId": "getLocations",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "type": "string",
                        "format": "dateTime"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "type": "string",
                        "format": "dateTime"
                    },
                    {
                        "name": "lastLocationId",
                        "description": "locationId of last item in previous page (paging)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "description": "limit locations (paging)",
                        "in": "query",
                        "type": "number"
                    }
                ],
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "location response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Feature"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "add new location for current user",
                "operationId": "addLocation",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "new location body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Feature"
                        }
                    }
                ],
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "location response"
                    }
                }
            },
            "put": {
                "description": "update timestamp on latest location for current user",
                "operationId": "updateLocation",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "new location body",
                        "schema": {
                            "properties": {
                                "timestamp": {
                                    "type": "string",
                                    "format": "dateTime"
                                }
                            }
                        }
                    }
                ],
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "location response"
                    }
                }
            }
        },
        "/api/locations/users": {
            "get": {
                "description": "get all locations grouped by user",
                "operationId": "getLocationsByUser",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "type": "string",
                        "format": "dateTime"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "type": "string",
                        "format": "dateTime"
                    },
                    {
                        "name": "lastLocationId",
                        "description": "locationId of last item in previous page (paging)",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "description": "limit locations (paging)",
                        "in": "query",
                        "type": "number"
                    }
                ],
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "location response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Feature"
                            }
                        }
                    }
                }
            }
        },
        "/api/{exportType}": {
            "get": {
                "description": "export mage data (GeoJSON, KML or Shapefiles)",
                "operationId": "export",
                "produces": [
                    "application/zip"
                ],
                "parameters": [
                    {
                        "name": "exportType",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "enum": [
                            "geojson",
                            "kml",
                            "shapefile"
                        ]
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "type": "string",
                        "format": "dateTime"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "type": "string",
                        "format": "dateTime"
                    },
                    {
                        "name": "layerIds",
                        "description": "ids of feature layers to export",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fft",
                        "description": "export locations",
                        "in": "query",
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "Export"
                ],
                "responses": {
                    "200": {
                        "description": "export response"
                    }
                }
            }
        }
    },
    "definitions": {
        "LoginRequest": {
            "required": [
                "username",
                "uid",
                "p***REMOVED***word"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "p***REMOVED***word": {
                    "type": "string"
                }
            }
        },
        "LoginResponse": {
            "properties": {
                "token": {
                    "type": "string"
                },
                "expirationDate": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "role": {
                    "$ref": "#/definitions/Role"
                }
            }
        },
        "Role": {
            "required": [
                "_id",
                "name",
                "description",
                "permissions"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UserCreate": {
            "required": [
                "username",
                "firstname",
                "lastname"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                },
                "p***REMOVED***word": {
                    "type": "string"
                },
                "p***REMOVED***wordConfirm": {
                    "type": "string"
                }
            }
        },
        "User": {
            "required": [
                "_id",
                "username",
                "firstname",
                "lastname",
                "active",
                "role"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "role": {
                    "$ref": "#/definitions/Role"
                },
                "avatarUrl": {
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                }
            }
        },
        "Users": {
            "required": [
                "_id",
                "username",
                "firstname",
                "lastname",
                "active",
                "role"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                },
                "avatarUrl": {
                    "type": "string"
                }
            }
        },
        "DeviceCreate": {
            "properties": {
                "uid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "poc": {
                    "type": "string"
                },
                "registered": {
                    "type": "boolean",
                    "description": "boolean indicating if device is registered, ADMIN only"
                }
            }
        },
        "Device": {
            "required": [
                "_id",
                "uid",
                "name",
                "description"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "registered": {
                    "type": "boolean"
                }
            }
        },
        "EventCreate": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "Event": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "LayerCreate": {
            "required": [
                "name",
                "type",
                "url"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "base": {
                    "type": "boolean"
                },
                "format": {
                    "type": "string"
                }
            }
        },
        "Layer": {
            "required": [
                "id",
                "name",
                "type",
                "url"
            ],
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "base": {
                    "type": "boolean"
                },
                "format": {
                    "type": "string"
                }
            }
        },
        "FormCreate": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "variantField": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Field"
                    }
                }
            }
        },
        "Form": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "variantField": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Field"
                    }
                }
            }
        },
        "Field": {
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Choice"
                    }
                }
            }
        },
        "Choice": {
            "properties": {
                "id": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "Feature": {
            "properties": {
                "id": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                },
                "geometry": {
                    "type": "object"
                },
                "properties": {
                    "type": "object"
                }
            }
        },
        "FeatureStateCreate": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "FeatureState": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "Attachment": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                },
                "oriented": {
                    "type": "boolean"
                },
                "thumbnails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Thumbnail"
                    }
                }
            }
        },
        "Thumbnail": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                },
                "size": {
                    "type": "number"
                },
                "minDimension": {
                    "type": "number"
                }
            }
        }
    }
}