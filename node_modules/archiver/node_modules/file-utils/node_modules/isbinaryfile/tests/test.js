"mocha";

var ***REMOVED***ert = require("***REMOVED***ert");
var fs = require("fs");
var isBinaryFile = require("../index");

describe('isBinaryFile', function() {
  it('should fail on a binary program', function() {
    ***REMOVED***ert(isBinaryFile("tests/fixtures/01_grep"));

    var bytes = fs.readFileSync("tests/fixtures/01_grep");
    var stat = fs.lstatSync("tests/fixtures/01_grep");
    ***REMOVED***ert(isBinaryFile(bytes, stat.size));
  });

  it('should not fail on an extensionless script', function() {
    ***REMOVED***ert(!isBinaryFile("tests/fixtures/02_perl_script"));

    var bytes = fs.readFileSync("tests/fixtures/02_perl_script");
    var stat = fs.lstatSync("tests/fixtures/02_perl_script");
    ***REMOVED***ert(!isBinaryFile(bytes, stat.size));
  });

  it('should not fail on a russian text', function() {
    ***REMOVED***ert(!isBinaryFile("tests/fixtures/03_russian_file.rst"));

    var bytes = fs.readFileSync("tests/fixtures/03_russian_file.rst");
    var stat = fs.lstatSync("tests/fixtures/03_russian_file.rst");
    ***REMOVED***ert(!isBinaryFile(bytes, stat.size));
  });

  it('should not fail on a PDF', function() {
    ***REMOVED***ert(isBinaryFile("tests/fixtures/04_HelloWorld.pdf"));

    var bytes = fs.readFileSync("tests/fixtures/04_HelloWorld.pdf");
    var stat = fs.lstatSync("tests/fixtures/04_HelloWorld.pdf");
    ***REMOVED***ert(isBinaryFile(bytes, stat.size));
  });

  it('should not fail on a zero-byte file', function() {
    ***REMOVED***ert(!isBinaryFile("tests/fixtures/05_null_file.gif"));

    var bytes = fs.readFileSync("tests/fixtures/05_null_file.gif");
    var stat = fs.lstatSync("tests/fixtures/05_null_file.gif");
    ***REMOVED***ert(!isBinaryFile(bytes, stat.size));
  });

  it('should not fail on a gif', function() {
    ***REMOVED***ert(isBinaryFile("tests/fixtures/06_trunks.gif"));

    var bytes = fs.readFileSync("tests/fixtures/06_trunks.gif");
    var stat = fs.lstatSync("tests/fixtures/06_trunks.gif");
    ***REMOVED***ert(isBinaryFile(bytes, stat.size));
  });

  it('should not fail with async', function(done) {
    ***REMOVED***ert.doesNotThrow(function() {
      isBinaryFile("tests/fixtures/06_trunks.gif", function(err, result) {
        ***REMOVED***ert(!err);
        ***REMOVED***ert(result);
        done();
      }, function(err) {
        if (err) throw err;
        done();
      });
    });
  });
});
